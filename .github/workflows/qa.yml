name: QA pipeline
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

on:
  pull_request:
    types: [opened, edited, synchronize]
    branches: [main]
    paths-ignore:
      - .github/**
      - .gitignore
      - .pre-commit-config.yaml
      - .tflint.hcl
      - LICENSE
      - README.md
      - renovate.json
      - scripts/**
      - tests/**
      - mise.toml

  workflow_dispatch:

  push:
    branches: [main]
    paths:
      - tests/qa/**

concurrency: terraform_qa

defaults:
  run:
    shell: bash

jobs:
  qa-up:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Load credentials from 1Password
        uses: 1password/load-secrets-action@v3
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_GITHUB_TOKEN }}
          SLACK_WEBHOOK: op://CloudEng-General/Slack dfds.slack.com webhooks/jdm5vktylqnczrlkkbvsveyp5e
          AWS_ACCESS_KEY_ID: op://CloudEng-General/AWS account dfds-cloudengineering-bluep-nvfgm IAM user Deploy/username
          AWS_SECRET_ACCESS_KEY: op://CloudEng-General/AWS account dfds-cloudengineering-bluep-nvfgm IAM user Deploy/password

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: tests/qa

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: tests/qa

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out qa.plan
        working-directory: tests/qa

      - name: Terraform Apply
        id: apply
        run: terraform apply -input=false -auto-approve qa.plan
        working-directory: tests/qa

      - name: Send alert if job fails
        if: failure()
        uses: dfds/shared-workflows/.github/actions/automation-slack-notifier@master
        with:
          slack_webhook: ${{ env.SLACK_WEBHOOK }}
          slack_message: Spin up QA environment for RDS failed.

  qa-test:
    runs-on: ubuntu-latest
    needs: qa-up
    container:
      image: dfdsdk/python-pipeline:0.0.4
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Load credentials from 1Password
        uses: 1password/load-secrets-action@v3
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_GITHUB_TOKEN }}
          SLACK_WEBHOOK: op://CloudEng-General/Slack dfds.slack.com webhooks/jdm5vktylqnczrlkkbvsveyp5e
          AWS_ACCESS_KEY_ID: op://CloudEng-General/AWS account dfds-cloudengineering-bluep-nvfgm IAM user Deploy/username
          AWS_SECRET_ACCESS_KEY: op://CloudEng-General/AWS account dfds-cloudengineering-bluep-nvfgm IAM user Deploy/password

      - name: Poetry install Python packages
        id: poetry-install-packages
        run: /etc/poetry/bin/poetry install
        working-directory: scripts/qa

      - name: Poetry run test case
        id: poetry-run-test-case
        run: /etc/poetry/bin/poetry run python3 test_rds.py
        working-directory: scripts/qa

      - name: Send alert if job fails
        if: failure()
        uses: dfds/shared-workflows/.github/actions/automation-slack-notifier@master
        with:
          slack_webhook: ${{ env.SLACK_WEBHOOK }}
          slack_message: Test QA environment for RDS failed.
